name: Terraform Plan - Production

permissions:
  id-token: write # required for OIDC authentication with AWS
  contents: read # required to clone the repo
  statuses: write # required to create a status check
  deployments: write # required to create a deployment
  actions: read # required to get the job id to link the status to the correct job/log output

concurrency:
  group: tacosbot-${{ github.event.inputs.name }}-plan
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Name of the TacoBot Project'
        required: true
      dir:
        description: 'Directory to run Terraform'
        required: true
      plan_path:
        description: 'Path to save the Terraform plan'
        required: true
      workflow:
        description: 'TacoBot Workflow'
        required: false
      terraform_version:
        description: 'Terraform Version'
        default: "1.1.7"

jobs:
  plan_terraform:
    runs-on: ubuntu-latest
    steps:
      #- uses: hashicorp/setup-terraform@v3
      #  with:
      #    terraform_version: ${{ github.event.inputs.terraform_version }}
      - name: Checkout
        uses: actions/checkout@v4
      ## Steps below here are able to be customized
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::809929912595:role/GitHubActionRole
          role-session-name: tacobot
          aws-region: us-west-2
          disable-retry: true
      - name: Terraform Init
        working-directory: ${{ github.event.inputs.dir }}
        run: terraform init
      - name: Terraform Plan
        id: terraform_plan
        working-directory: ${{ github.event.inputs.dir }}
        run: |
          terraform plan -out=${{ github.event.inputs.plan_path }} | tee full_plan_output
      - name: Process Terraform Plan
        uses: ./.github/actions/plan_processing
        with:
          name: ${{ github.event.inputs.name }}
          full_plan_path: ${{ github.event.inputs.dir }}/${{ github.event.inputs.plan_path }}
          plan_file_name: ${{ github.event.inputs.plan_path }}
