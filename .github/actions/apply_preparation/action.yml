name: 'TacosBot Apply Preperation'
description: 'Run this action before you run your Terraform Apply'
inputs:
  comment:
    description: 'The comment that triggered the action'
    required: true
  github_token:
    description: 'GitHub Token'
    required: true
outputs:
  directory:
    description: "The directory to apply Terraform"
    value: ${{ steps.get_deployment_info.outputs.directory }}
  deployment_id:
    description: "The ID of the deployment"
    value: ${{ steps.get_deployment_info.outputs.deployment_id }}
  project_name:
    description: Name of the TacosBot Project
    value: ${{ steps.get_deployment_info.outputs.project_name}}
runs:
  using: "composite"
  steps:
    - name: Extract project name
      shell: bash
      id: get_project_name_from_comment
      run: |
        COMMENT="${{ inputs.comment }}"
        PROJECT_NAME=$(echo "$COMMENT" | sed -n 's/.*--project \([^ ]*\).*/\1/p')
        echo "PROJECT_NAME=$PROJECT_NAME"
        echo "::set-output name=project_name::$PROJECT_NAME"
    - name: Authenticate GitHub CLI
      shell: bash
      run: |
        echo "${{ inputs.github_token }}" | gh auth login --with-token
    - name: Retrieve GitHub Deployment for Workspace
      id: get_deployment_info
      shell: bash
      run: |
        DEPLOYMENT_JSON=$(gh api repos/${{ github.repository }}/deployments?environment=${{ steps.get_project_name_from_comment.outputs.project_name }} | jq '.[0]')
        DEPLOYMENT_ID=$(echo "$DEPLOYMENT_JSON" | jq -r '.id')
        DEPLOYMENT_INFO=$(echo "$DEPLOYMENT_JSON" | jq '.payload')
        echo "DEPLOYMENT_INFO=$DEPLOYMENT_INFO"
        SHA=$(echo $DEPLOYMENT_INFO | jq -r .sha)
        PR_NUMBER=$(echo $DEPLOYMENT_INFO | jq -r .pr_number)
        PROJECT_NAME=$(echo $DEPLOYMENT_INFO | jq -r .project_name)
        DIRECTORY=$(echo $DEPLOYMENT_INFO | jq -r .project.dir)
        WORKFLOW=$(echo $DEPLOYMENT_INFO | jq -r .project.workflow)
        PLAN_PATH=$(echo $DEPLOYMENT_INFO | jq -r .project.plan_path)
        echo "::set-output name=deployment_id::$DEPLOYMENT_ID"
        echo "::set-output name=sha::$SHA"
        echo "::set-output name=pr_number::$PR_NUMBER"
        echo "::set-output name=project_name::$PROJECT_NAME"
        echo "::set-output name=directory::$DIRECTORY"
        echo "::set-output name=workflow::$WORKFLOW"
        echo "::set-output name=plan_path::$PLAN_PATH"
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.get_deployment_info.outputs.sha }}
    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v3
      with:
        pr: ${{ github.event.issue.pull_request.number }}
        workflow: ${{ steps.get_deployment_info.outputs.workflow }}_plan.yaml
        name: ${{ steps.get_deployment_info.outputs.plan_path }}
        path: ${{ steps.get_deployment_info.outputs.directory }}
        github_token: ${{ inputs.github_token }}
    - name: Rename plan
      shell: bash
      working-directory: ${{ steps.get_deployment_info.outputs.directory}}
      run: |
        mv ${{ steps.get_deployment_info.outputs.plan_path}} plan